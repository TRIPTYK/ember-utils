{"version":3,"file":"translate-country.js","sources":["../../src/helpers/translate-country.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\n\nexport interface TranslateCountrySignature {\n  Args: {\n    Positional: [string[] | string, string?];\n  };\n  Return: string | (string | undefined)[] | undefined;\n}\n\nconst translateCountry = helper<TranslateCountrySignature>(\n  function translateCountry([value, language]: [string[] | string, string?]) {\n    const lang = language ?? 'fr';\n    const regionNamesInFrench = new Intl.DisplayNames([lang], {\n      type: 'region',\n    });\n    if (Array.isArray(value)) {\n      return value.map((country: string) => regionNamesInFrench.of(country));\n    }\n    if (value.length > 2) {\n      return value;\n    }\n    return regionNamesInFrench.of(value);\n  },\n);\n\nexport default translateCountry;\n\ndeclare module '@glint/environment-ember-loose/registry' {\n  export default interface Registry {\n    'translate-country': typeof translateCountry;\n  }\n}\n"],"names":["translateCountry","helper","value","language","lang","regionNamesInFrench","Intl","DisplayNames","type","Array","isArray","map","country","of","length"],"mappings":";;AASA,MAAMA,gBAAgB,GAAGC,MAAM,CAC7B,SAASD,gBAAgBA,CAAC,CAACE,KAAK,EAAEC,QAAQ,CAA+B,EAAE;AACzE,EAAA,MAAMC,IAAI,GAAGD,QAAQ,IAAI,IAAI,CAAA;EAC7B,MAAME,mBAAmB,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,CAACH,IAAI,CAAC,EAAE;AACxDI,IAAAA,IAAI,EAAE,QAAA;AACR,GAAC,CAAC,CAAA;AACF,EAAA,IAAIC,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,EAAE;AACxB,IAAA,OAAOA,KAAK,CAACS,GAAG,CAAEC,OAAe,IAAKP,mBAAmB,CAACQ,EAAE,CAACD,OAAO,CAAC,CAAC,CAAA;AACxE,GAAA;AACA,EAAA,IAAIV,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;AACpB,IAAA,OAAOZ,KAAK,CAAA;AACd,GAAA;AACA,EAAA,OAAOG,mBAAmB,CAACQ,EAAE,CAACX,KAAK,CAAC,CAAA;AACtC,CACF;;;;"}