{"version":3,"file":"extended-store.js","sources":["../../src/services/extended-store.ts"],"sourcesContent":["import type emberData__store from '@ember-data/store';\nimport Service, { service } from '@ember/service';\n// eslint-disable-next-line ember/use-ember-data-rfc-395-imports\nimport type ModelRegistry from 'ember-data/types/registries/model';\n\nexport default class ExtendedStoreService extends Service {\n  @service declare store: emberData__store;\n\n  /**\n   * Try to peek a record in the store, if it doesn't exist, create a new one.\n   */\n  public peekOrCreateRecord<K extends keyof ModelRegistry>(\n    recordType: K,\n    recordId: string | undefined,\n  ): ModelRegistry[K] {\n    if (!recordId) {\n      return this.store.createRecord(recordType);\n    }\n\n    const record = this.store.peekRecord(recordType, recordId);\n\n    if (record === null) {\n      return this.store.createRecord(recordType);\n    }\n\n    return record;\n  }\n\n  public peekOrFail<K extends keyof ModelRegistry>(\n    recordType: K,\n    id: string,\n  ): ModelRegistry[K] {\n    const record = this.store.peekRecord(recordType, id);\n    if (!record) {\n      throw new Error(\n        `Record ${recordType} with identifier ${id} not found in store`,\n      );\n    }\n    return record;\n  }\n}\n\ndeclare module '@ember/service' {\n  interface Registry {\n    'extended-store': ExtendedStoreService;\n  }\n}\n"],"names":["ExtendedStoreService","_class","Service","constructor","args","_initializerDefineProperty","_descriptor","peekOrCreateRecord","recordType","recordId","store","createRecord","record","peekRecord","peekOrFail","id","Error","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer"],"mappings":";;;;AAEA;AAGqBA,IAAAA,oBAAoB,IAAAC,MAAA,GAA1B,MAAMD,oBAAoB,SAASE,OAAO,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,gBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;AAGxD;AACF;AACA;AACSC,EAAAA,kBAAkBA,CACvBC,UAAa,EACbC,QAA4B,EACV;IAClB,IAAI,CAACA,QAAQ,EAAE;AACb,MAAA,OAAO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACH,UAAU,CAAC,CAAA;AAC5C,KAAA;IAEA,MAAMI,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,UAAU,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAA;IAE1D,IAAIG,MAAM,KAAK,IAAI,EAAE;AACnB,MAAA,OAAO,IAAI,CAACF,KAAK,CAACC,YAAY,CAACH,UAAU,CAAC,CAAA;AAC5C,KAAA;AAEA,IAAA,OAAOI,MAAM,CAAA;AACf,GAAA;AAEOE,EAAAA,UAAUA,CACfN,UAAa,EACbO,EAAU,EACQ;IAClB,MAAMH,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,UAAU,CAACL,UAAU,EAAEO,EAAE,CAAC,CAAA;IACpD,IAAI,CAACH,MAAM,EAAE;MACX,MAAM,IAAII,KAAK,CACZ,CAAA,OAAA,EAASR,UAAW,CAAmBO,iBAAAA,EAAAA,EAAG,qBAC7C,CAAC,CAAA;AACH,KAAA;AACA,IAAA,OAAOH,MAAM,CAAA;AACf,GAAA;AACF,CAAC,GAAAN,WAAA,GAAAW,yBAAA,CAAAhB,MAAA,CAAAiB,SAAA,EAAA,OAAA,EAAA,CAlCEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,GAAAtB,MAAA;;;;"}