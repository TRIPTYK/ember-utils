{"version":3,"file":"fetch.js","sources":["../../src/services/fetch.ts"],"sourcesContent":["import Service from '@ember/service';\nimport getAdapterOrThrow from '../utils/get-adapter-or-throw';\n\nexport default class FetchService extends Service {\n  /**\n   * A regular fetch but with the application adapter scope\n   * Throws when status code is >= 400\n   */\n  // eslint-disable-next-line no-undef\n  async request(url: string, moreOptions: RequestInit = {}) {\n    const adapter = getAdapterOrThrow(this);\n\n    const res = await fetch(`${adapter.host}/${adapter.namespace}/${url}`, {\n      headers: adapter.headers,\n      ...moreOptions,\n    });\n\n    if (res.status >= 400) {\n      throw res;\n    }\n\n    return res;\n  }\n}\n\n// DO NOT DELETE: this is how TypeScript knows how to look up your services.\ndeclare module '@ember/service' {\n  interface Registry {\n    fetch: FetchService;\n  }\n}\n"],"names":["FetchService","Service","request","url","moreOptions","adapter","getAdapterOrThrow","res","fetch","host","namespace","headers","status"],"mappings":";;;AAGe,MAAMA,YAAY,SAASC,OAAO,CAAC;AAChD;AACF;AACA;AACA;AACE;EACA,MAAMC,OAAOA,CAACC,GAAW,EAAEC,WAAwB,GAAG,EAAE,EAAE;AACxD,IAAA,MAAMC,OAAO,GAAGC,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAEvC,IAAA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAO,CAACI,IAAK,CAAA,CAAA,EAAGJ,OAAO,CAACK,SAAU,CAAGP,CAAAA,EAAAA,GAAI,EAAC,EAAE;MACrEQ,OAAO,EAAEN,OAAO,CAACM,OAAO;MACxB,GAAGP,WAAAA;AACL,KAAC,CAAC,CAAA;AAEF,IAAA,IAAIG,GAAG,CAACK,MAAM,IAAI,GAAG,EAAE;AACrB,MAAA,MAAML,GAAG,CAAA;AACX,KAAA;AAEA,IAAA,OAAOA,GAAG,CAAA;AACZ,GAAA;AACF,CAAA;;AAEA;;;;"}